name: Docker Build and Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
      
jobs:
  build_and_test:
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKER_IMAGE_NAME: netmgmtchatops

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest

      - name: Run Docker container
        run: |
          docker run -d -p 8000:8000 -e WEBEX_BOT_TOKEN=${{ secrets.WEBEX_BOT_TOKEN }} -e RESTCONF_USERNAME=${{ secrets.RESTCONF_USERNAME }} -e RESTCONF_PASSWORD=${{ secrets.RESTCONF_PASSWORD }} -e DEVICE_IP_PORT=${{ secrets.DEVICE_IP_PORT }} --name netmgmtchatops ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest

      - name: Test Docker container
        run: |
          # Add your test commands here, for example:
          sleep 10  # Give the container some time to start
          curl -X GET "http://localhost:8000/hello/Tester"
          curl -X GET "http://localhost:8000/backup"

      # - name: Trigger deploy
      #   run: |
      #     curl -X POST \
      #       -H "Authorization: token ${{ secrets.REPO_DISPATCH_TOKEN }}" \
      #       -H "Content-Type: application/json" \
      #       -d '{"event_type": "deploy"}' \
      #       https://api.github.com/repos/${{ github.repository }}/dispatches


